services:
    reciever:
        restart: always
        build:
            dockerfile: Reciever/Dockerfile
        depends_on:
        - kafka
        ports:
            - '8080:8080'
        volumes:
          - type: bind
            source: ./logs/reciever.log
            target: /app/reciever.log
    storage:
        restart: always
        build:
            dockerfile: Storage/Dockerfile
        depends_on:
        - kafka
        - db
        volumes:
          - type: bind
            source: ./logs/storage.log
            target: /app/storage.log

    processor:
        restart: always
        build:
            dockerfile: Processing/Dockerfile
        depends_on:
        - storage
        ports:
            - '8100:8100'
        volumes:
          - ./data/processing:/app/data
          - type: bind
            source: ./logs/processor.log
            target: /app/processor.log
    analyzer:
        restart: always
        build:
            dockerfile: Analyzer/Dockerfile
        depends_on:
        - kafka
        ports:
            - '8110:8110'
        volumes:
          - type: bind
            source: ./logs/analyzer.log
            target: /app/analyzer.log

    db:
        env_file: "db.env"    
        image: mysql
        restart: always
        volumes:
        # Where our data will be persisted
            - ./data/db:/var/lib/mysql
    zookeeper:
        restart: always
        image: wurstmeister/zookeeper
        volumes:
        - zookeeper_data:/opt/zookeeper-3.4.13/conf/
    kafka:
        restart: always
        image: wurstmeister/kafka
        command: sh -c "rm -f /kafka/kafka-logs-kafka/meta.properties && start-kafka.sh"
        hostname: kafka
        environment:
            KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
            KAFKA_ADVERTISED_HOST_NAME: localhost # docker-machine ip
            KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - ./data/kafka/:/kafka
        depends_on:
            - "zookeeper"

volumes:
    zookeeper_data:
